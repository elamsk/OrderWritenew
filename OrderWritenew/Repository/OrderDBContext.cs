using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore.SqlServer;
using Microsoft.EntityFrameworkCore;
using OrderWritenew.Models;
using System.Net;

namespace OrderWritenew.Repository
{
    public class OrderDBContext: DbContext
    {
        public OrderDBContext()
        {

        }
        public OrderDBContext(DbContextOptions options): base(options)
        {

        }

        public virtual DbSet<Order> orders { get; set; }

        protected override void OnModelCreating(ModelBuilder builder)
        {
            builder.Entity<Order>().HasKey("Orderid");
            builder.Entity<Order>().Property("Orderid").ValueGeneratedNever();  //Avoid deuplicate
            builder.Entity<Order>().OwnsOne(a => a.Customer).Property("Firstname");  // 1-1 relationship
            builder.Entity<Order>().OwnsOne(a => a.Customer).Property("Lastname");  // 1-1 relationship
            builder.Entity<Order>().OwnsOne(a => a.Customer).Property("Location");  // 1-1 relationship
            builder.Entity<Order>().OwnsOne(a => a.Customer).ToTable("CustomerInfo");  // To seperate table
            builder.Entity<Order>().OwnsMany(a => a.OrderItems).Property("ProductId");  // 1-M realtionship 
            builder.Entity<Order>().OwnsMany(a => a.OrderItems).Property("Quantity");  // 1-M realtionship 
            builder.Entity<Order>().OwnsMany(a => a.OrderItems).Property("Price");  // 1-M realtionship 

            builder.Entity<Order>().OwnsMany(a => a.OrderItems, w=>
            {
                w.Property<int>("OrderLineItemId");
                w.HasKey("OrderLineItemId");
                w.ToTable("OrderLineItems");
            });  // AutoGenerated  // w.HasForeignKey (Orderid) is missing in 3.0 

            base.OnModelCreating(builder);
        }

    }
}
